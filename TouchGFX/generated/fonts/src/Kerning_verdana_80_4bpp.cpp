#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_verdana_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0022, "], Kerning dist = 2)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0027, '], Kerning dist = -5)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0027, '], Kerning dist = 2)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x0029, )], Kerning dist = 4)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x002A, *], Kerning dist = 2)
    { 0x002E, -5 },  // (First char = [0x002E, .], Second char = [0x002C, ,], Kerning dist = -5)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002C, ,], Kerning dist = -2)
    { 0x0046, -12 },  // (First char = [0x0046, F], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0050, -12 },  // (First char = [0x0050, P], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x0057, -11 },  // (First char = [0x0057, W], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x002C, ,], Kerning dist = -5)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0072, -11 },  // (First char = [0x0072, r], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x002E, -6 },  // (First char = [0x002E, .], Second char = [0x002D, -], Kerning dist = -6)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x002D, -], Kerning dist = -1)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x002D, -], Kerning dist = -4)
    { 0x004C, -6 },  // (First char = [0x004C, L], Second char = [0x002D, -], Kerning dist = -6)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x002D, -], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002D, -], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x002D, -], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x002D, -], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x002D, -], Kerning dist = -2)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x002D, -], Kerning dist = -4)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0046, -12 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -12)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002E, .], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0050, -12 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -11)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -11)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x002E, .], Kerning dist = -11)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x002E, .], Kerning dist = -5)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0072, -11 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -11)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x003A, :], Kerning dist = -2)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x003A, :], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x003A, :], Kerning dist = -8)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x003B, ;], Kerning dist = -2)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x003B, ;], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x003B, ;], Kerning dist = -8)
    { 0x0046,  2 },  // (First char = [0x0046, F], Second char = [0x003F, ?], Kerning dist = 2)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x003F, ?], Kerning dist = 2)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x003F, ?], Kerning dist = 4)
    { 0x0027, -4 },  // (First char = [0x0027, '], Second char = [0x0041, A], Kerning dist = -4)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0049, I], Kerning dist = -1)
    { 0x002D, -4 },  // (First char = [0x002D, -], Second char = [0x004A, J], Kerning dist = -4)
    { 0x004C,  4 },  // (First char = [0x004C, L], Second char = [0x004A, J], Kerning dist = 4)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004F, O], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0053, S], Kerning dist = -1)
    { 0x002D, -6 },  // (First char = [0x002D, -], Second char = [0x0054, T], Kerning dist = -6)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -5)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0054, T], Kerning dist = 1)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -7)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0065, -5 },  // (First char = [0x0065, e], Second char = [0x0054, T], Kerning dist = -5)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -4)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -4)
    { 0x002D, -3 },  // (First char = [0x002D, -], Second char = [0x0058, X], Kerning dist = -3)
    { 0x002D, -5 },  // (First char = [0x002D, -], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -6 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x005C, \], Kerning dist = 4)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x005D, ]], Kerning dist = 4)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -4)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -9)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -5)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0065, e], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -8)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -5)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -4)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -4)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x006F, o], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -4)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -5)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -8)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -7)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -4)
};

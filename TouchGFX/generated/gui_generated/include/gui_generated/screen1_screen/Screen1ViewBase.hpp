/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/Graph.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void functionZoomIn()
    {
        // Override and implement this function in Screen1
    }
    virtual void functionZoomOut()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::TextAreaWithTwoWildcards textDelta30and60;
    touchgfx::TextAreaWithTwoWildcards textDelta5and10;
    touchgfx::TextAreaWithTwoWildcards textLastBGValue;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::Graph<240> graph1;
    touchgfx::GraphElementGridX graph1MinorXAxisGrid;
    touchgfx::GraphElementGridY graph1MinorYAxisGrid;
    touchgfx::GraphElementGridX graph1MajorXAxisGrid;
    touchgfx::GraphElementGridY graph1MajorYAxisGrid;
    touchgfx::GraphLabelsX graph1MajorXAxisLabel;
    touchgfx::GraphLabelsY graph1MajorYAxisLabel;
    touchgfx::GraphElementLine graph1Line1;
    touchgfx::PainterRGB565 graph1Line1Painter;
    touchgfx::GraphElementDots graph1Dots1;
    touchgfx::PainterRGB565 graph1Dots1Painter;
    touchgfx::Graph<2> graph1Min;
    touchgfx::GraphElementLine graph1MinLine1;
    touchgfx::PainterRGB565 graph1MinLine1Painter;
    touchgfx::Graph<2> graph1Max;
    touchgfx::GraphElementLine graph1MaxLine1;
    touchgfx::PainterRGB565 graph1MaxLine1Painter;
    touchgfx::TextAreaWithOneWildcard textStep;
    touchgfx::Button buttonZoomIn;
    touchgfx::Button buttonZoomOut;
    touchgfx::CircleProgress circleProgress1;
    touchgfx::PainterRGB565 circleProgress1Painter;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textBGFade;
    touchgfx::TextAreaWithTwoWildcards textt123;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTDELTA30AND60BUFFER1_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textDelta30and60Buffer1[TEXTDELTA30AND60BUFFER1_SIZE];
    static const uint16_t TEXTDELTA30AND60BUFFER2_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textDelta30and60Buffer2[TEXTDELTA30AND60BUFFER2_SIZE];
    static const uint16_t TEXTDELTA5AND10BUFFER1_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textDelta5and10Buffer1[TEXTDELTA5AND10BUFFER1_SIZE];
    static const uint16_t TEXTDELTA5AND10BUFFER2_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textDelta5and10Buffer2[TEXTDELTA5AND10BUFFER2_SIZE];
    static const uint16_t TEXTLASTBGVALUEBUFFER1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textLastBGValueBuffer1[TEXTLASTBGVALUEBUFFER1_SIZE];
    static const uint16_t TEXTLASTBGVALUEBUFFER2_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textLastBGValueBuffer2[TEXTLASTBGVALUEBUFFER2_SIZE];
    static const uint16_t TEXTSTEP_SIZE = 2;
    touchgfx::Unicode::UnicodeChar textStepBuffer[TEXTSTEP_SIZE];
    static const uint16_t TEXTBGFADE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textBGFadeBuffer[TEXTBGFADE_SIZE];
    static const uint16_t TEXTT123BUFFER1_SIZE = 25;
    touchgfx::Unicode::UnicodeChar textt123Buffer1[TEXTT123BUFFER1_SIZE];
    static const uint16_t TEXTT123BUFFER2_SIZE = 7;
    touchgfx::Unicode::UnicodeChar textt123Buffer2[TEXTT123BUFFER2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
